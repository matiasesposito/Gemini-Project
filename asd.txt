import { GoogleGenerativeAI } from "@google/generative-ai";

const api_key = 'AIzaSyCpCTNhzw8P1wrygLOFpoWh1JS2brQQcUc';

const genAI = new GoogleGenerativeAI(api_key);

const model = genAI.getGenerativeModel({ model: "gemini-2.0-flash-exp" });


async function responderIA(blob) {
  // Formatear el blob para quitar el 'data' del principio 
  var base64 = blob.split(",")[1];

  const result = await model.generateContent([
    {
        inlineData: {
            data: base64,
            mimeType: "application/pdf"
        }
    },

    `El siguiente texto corresponde a los datos de un CV y necesito que el resultado sea lo mas extenso posible.
                  Necesito que me retornes SOLO los datos que te voy a pasar a continuacion
                  sin ningun caracter especial como comillas \` o *:
                  1. Nombre y Apellido
                  2. DNI de la persona (DNI:Entero de 8 digitos sin guiones, espacios ni puntos. Si no tiene DNI, colocar el CUIL)
                  3. Fecha de Nacimiento
                  4. Correo electronico
                  5. Ciudad y Provincia
                  6. Instituciones, Universidades o Empresas en las que trabajÃ³, estudio o tuvo algun tipo de participacion.
                  7. Perfil academico, Especialidades, Estudios, Habilidades, Idiomas o Experiencias
                  En caso de no encontrar alguno de estos datos, coloca null en su lugar.
                  Deberas devolvermelo en el siguiente formato:
                  {
                    "nombre_apellido": "XXXX",
                    "dni": "NNNNNNNN",
                    "fecha_nacimiento": "aaaa-mm-dd",
                    "correo_electronico": "XXXX",
                    "ciudad_provincia": "XXXX",
                    "instituciones_empresas": ["Institucion 1", "Institucion 2", "Institucion 3", ...],
                    "perfiles_especialidades": ["Especialidad 1", "Especialidad 2", "Especialidad 3", ...]
                  }
    `
]);



  const response = await result.response;
  const respuesta = response.text();
  console.log(respuesta)
  return respuesta;
}



  const btnCargar = document.getElementById("cargar_cv");
  btnCargar.addEventListener("click", async (e) => {
    var file = document.getElementById("archivo").files[0];
    var { name } = file;
    var ext = name.toLowerCase().substring(name.lastIndexOf('.') + 1);
  
    var reader = new FileReader();
    // Convertir archivo a blob. readASDataURL devuelve un base64
    reader.readAsDataURL(file);
    // Evento que se dispara cuando se termina de leer el archivo
    reader.addEventListener('load', async function() {
      var blob = reader.result
      responderIA(blob)
    })
  })
